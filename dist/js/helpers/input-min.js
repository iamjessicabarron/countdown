"use strict";var _createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var i=e[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,a,i){return a&&t(e.prototype,a),i&&t(e,i),e}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var ValidatedInput=function(){function t(e){_classCallCheck(this,t),this.regex=new RegExp(/[|;$%@"<>()+,]/,"g"),this.input=document.querySelector("#"+e),this.value="",this.validationMessages=[],this.validationContainer=this.createValidationAlert(),this.input.insertAdjacentElement("afterend",this.validationContainer),this.addListener()}return _createClass(t,[{key:"addListener",value:function(){var t=this;this.input.addEventListener("keyup",function(){t.validate()})}},{key:"validate",value:function(){return this.value=this.sanitise(this.input.value),null==this.input.value||this.input.value.length<1?(this.addValidationMessage("This isn't a valid response: It's empty."),this.validationContainer.classList.add("true"),this.updateValidationMessages(),!1):this.value.length<1?(this.addValidationMessage("This isn't a valid response: Contains only invalid characters."),this.validationContainer.classList.add("true"),this.updateValidationMessages(),!1):(this.validationMessages=[],this.validationContainer.classList.remove("true"),this.updateValidationMessages(),!0)}},{key:"addValidationMessage",value:function(t){this.validationMessages.includes(t)||this.validationMessages.push(t)}},{key:"sanitise",value:function(t){return t.length>0?t.replace(this.regex,""):t}},{key:"createValidationAlert",value:function(){var t=document.createElement("div");return t.classList.add("validationAlert"),t}},{key:"updateValidationMessages",value:function(){for(var t=this;this.validationContainer.lastChild;)this.validationContainer.removeChild(this.validationContainer.lastChild);this.validationMessages.forEach(function(e){var a=document.createElement("p"),i=document.createTextNode(e);a.appendChild(i),t.validationContainer.appendChild(a)})}}]),t}();